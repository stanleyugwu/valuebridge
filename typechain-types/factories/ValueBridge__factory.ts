/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ValueBridge, ValueBridgeInterface } from "../ValueBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_ownerName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_minTransferAmt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minWithdrawAmt",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_senderAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_sentAmt",
        type: "uint256",
      },
    ],
    name: "ValueReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_withdrawnAmt",
        type: "uint256",
      },
    ],
    name: "ValueWithdrawn",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "minTransferAmt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minWithdrawAmt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_note",
        type: "string",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfers",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "note",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawAmt",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001aba38038062001aba833981810160405281019062000037919062000325565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508260019080519060200190620000839291906200009d565b508160a081815250508060c0818152505050505062000405565b828054620000ab90620003cf565b90600052602060002090601f016020900481019282620000cf57600085556200011b565b82601f10620000ea57805160ff19168380011785556200011b565b828001600101855582156200011b579182015b828111156200011a578251825591602001919060010190620000fd565b5b5090506200012a91906200012e565b5090565b5b80821115620001495760008160009055506001016200012f565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001b6826200016b565b810181811067ffffffffffffffff82111715620001d857620001d76200017c565b5b80604052505050565b6000620001ed6200014d565b9050620001fb8282620001ab565b919050565b600067ffffffffffffffff8211156200021e576200021d6200017c565b5b62000229826200016b565b9050602081019050919050565b60005b838110156200025657808201518184015260208101905062000239565b8381111562000266576000848401525b50505050565b6000620002836200027d8462000200565b620001e1565b905082815260208101848484011115620002a257620002a162000166565b5b620002af84828562000236565b509392505050565b600082601f830112620002cf57620002ce62000161565b5b8151620002e18482602086016200026c565b91505092915050565b6000819050919050565b620002ff81620002ea565b81146200030b57600080fd5b50565b6000815190506200031f81620002f4565b92915050565b60008060006060848603121562000341576200034062000157565b5b600084015167ffffffffffffffff8111156200036257620003616200015c565b5b6200037086828701620002b7565b935050602062000383868287016200030e565b925050604062000396868287016200030e565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003e857607f821691505b60208210811415620003ff57620003fe620003a0565b5b50919050565b60805160a05160c05161163962000481600039600081816103ae015281816103d701526106d4015260008181607b015281816101240152818161071c0152818161074001526107670152600081816102fc015281816104a601528181610512015281816106f80152818161094101526109b901526116396000f3fe6080604052600436106100745760003560e01c8063775f55851161004e578063775f55851461025d5780638da5cb5b146102885780639342ff33146102b3578063a0258d0b146102de57610122565b80632e1a7d4d146101cb57806357b1dbe3146101f457806365ac23201461023257610122565b36610122577f00000000000000000000000000000000000000000000000000000000000000003410156100dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100d390610cc3565b60405180910390fd5b343373ffffffffffffffffffffffffffffffffffffffff167f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf73605666423349360405160405180910390a3005b7f0000000000000000000000000000000000000000000000000000000000000000341015610185576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017c90610d7b565b60405180910390fd5b343373ffffffffffffffffffffffffffffffffffffffff167f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf73605666423349360405160405180910390a3005b3480156101d757600080fd5b506101f260048036038101906101ed9190610ddb565b6102fa565b005b34801561020057600080fd5b5061021b60048036038101906102169190610e66565b61057b565b604051610229929190610f3d565b60405180910390f35b34801561023e57600080fd5b50610247610644565b6040516102549190610f6d565b60405180910390f35b34801561026957600080fd5b506102726106d2565b60405161027f9190610f8f565b60405180910390f35b34801561029457600080fd5b5061029d6106f6565b6040516102aa9190610fcb565b60405180910390f35b3480156102bf57600080fd5b506102c861071a565b6040516102d59190610f8f565b60405180910390f35b6102f860048036038101906102f3919061104b565b61073e565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614600160405160200161035b91906111e4565b604051602081830303815290604052906103ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a29190610f6d565b60405180910390fd5b507f000000000000000000000000000000000000000000000000000000000000000047101560016103fb7f0000000000000000000000000000000000000000000000000000000000000000610a3c565b60405160200161040c929190611308565b6040516020818303038152906040529061045c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104539190610f6d565b60405180910390fd5b50600081141561046f5761046e611355565b5b807f2f05c4448febd388e7252fc4dcc71501af93d54b8c8bb973e7b1e891d69c30fd60405160405180910390a247811115610510577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561050a573d6000803e3d6000fd5b50610578565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610576573d6000803e3d6000fd5b505b50565b6000602052816000526040600020818154811061059757600080fd5b9060005260206000209060020201600091509150508060000154908060010180546105c1906110ed565b80601f01602080910402602001604051908101604052809291908181526020018280546105ed906110ed565b801561063a5780601f1061060f5761010080835404028352916020019161063a565b820191906000526020600020905b81548152906001019060200180831161061d57829003601f168201915b5050505050905082565b60018054610651906110ed565b80601f016020809104026020016040519081016040528092919081815260200182805461067d906110ed565b80156106ca5780601f1061069f576101008083540402835291602001916106ca565b820191906000526020600020905b8154815290600101906020018083116106ad57829003601f168201915b505050505081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000034101561078b7f0000000000000000000000000000000000000000000000000000000000000000610a3c565b600160405160200161079e9291906113d0565b604051602081830303815290604052906107ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e59190610f6d565b60405180910390fd5b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040528034815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010190805190602001906108d5929190610b9d565b505050343373ffffffffffffffffffffffffffffffffffffffff167f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf73605666423349360405160405180910390a3600034141561092a57610a38565b60006002346109399190611441565b14156109b7577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc60023461098691906114a1565b9081150290604051600060405180830381858888f193505050501580156109b1573d6000803e3d6000fd5b50610a37565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6002600134610a0091906114d2565b610a0a91906114a1565b9081150290604051600060405180830381858888f19350505050158015610a35573d6000803e3d6000fd5b505b5b5050565b60606000821415610a84576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610b98565b600082905060005b60008214610ab6578080610a9f90611528565b915050600a82610aaf91906114a1565b9150610a8c565b60008167ffffffffffffffff811115610ad257610ad1611571565b5b6040519080825280601f01601f191660200182016040528015610b045781602001600182028036833780820191505090505b5090505b60008514610b9157600182610b1d91906115a0565b9150600a85610b2c9190611441565b6030610b3891906114d2565b60f81b818381518110610b4e57610b4d6115d4565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610b8a91906114a1565b9450610b08565b8093505050505b919050565b828054610ba9906110ed565b90600052602060002090601f016020900481019282610bcb5760008555610c12565b82601f10610be457805160ff1916838001178555610c12565b82800160010185558215610c12579182015b82811115610c11578251825591602001919060010190610bf6565b5b509050610c1f9190610c23565b5090565b5b80821115610c3c576000816000905550600101610c24565b5090565b600082825260208201905092915050565b7f536f7272792120746865207472616e7366657272656420616d6f756e7420697360008201527f20746f6f206c6f77000000000000000000000000000000000000000000000000602082015250565b6000610cad602883610c40565b9150610cb882610c51565b604082019050919050565b60006020820190508181036000830152610cdc81610ca0565b9050919050565b7f43616c6c65642066756e6374696f6e20646f65736e277420657869737420616e60008201527f6420746865207472616e7366657272656420616d6f756e7420697320746f6f2060208201527f6c6f770000000000000000000000000000000000000000000000000000000000604082015250565b6000610d65604383610c40565b9150610d7082610ce3565b606082019050919050565b60006020820190508181036000830152610d9481610d58565b9050919050565b600080fd5b600080fd5b6000819050919050565b610db881610da5565b8114610dc357600080fd5b50565b600081359050610dd581610daf565b92915050565b600060208284031215610df157610df0610d9b565b5b6000610dff84828501610dc6565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e3382610e08565b9050919050565b610e4381610e28565b8114610e4e57600080fd5b50565b600081359050610e6081610e3a565b92915050565b60008060408385031215610e7d57610e7c610d9b565b5b6000610e8b85828601610e51565b9250506020610e9c85828601610dc6565b9150509250929050565b610eaf81610da5565b82525050565b600081519050919050565b60005b83811015610ede578082015181840152602081019050610ec3565b83811115610eed576000848401525b50505050565b6000601f19601f8301169050919050565b6000610f0f82610eb5565b610f198185610c40565b9350610f29818560208601610ec0565b610f3281610ef3565b840191505092915050565b6000604082019050610f526000830185610ea6565b8181036020830152610f648184610f04565b90509392505050565b60006020820190508181036000830152610f878184610f04565b905092915050565b6000602082019050610fa46000830184610ea6565b92915050565b6000610fb582610e08565b9050919050565b610fc581610faa565b82525050565b6000602082019050610fe06000830184610fbc565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261100b5761100a610fe6565b5b8235905067ffffffffffffffff81111561102857611027610feb565b5b60208301915083600182028301111561104457611043610ff0565b5b9250929050565b6000806020838503121561106257611061610d9b565b5b600083013567ffffffffffffffff8111156110805761107f610da0565b5b61108c85828601610ff5565b92509250509250929050565b7f536f72727921206f6e6c79200000000000000000000000000000000000000000815250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061110557607f821691505b60208210811415611119576111186110be565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461114c816110ed565b611156818661111f565b945060018216600081146111715760018114611182576111b5565b60ff198316865281860193506111b5565b61118b8561112a565b60005b838110156111ad5781548189015260018201915060208101905061118e565b838801955050505b50505092915050565b7f2063616e2063616c6c20746869732066756e6374696f6e000000000000000000815250565b60006111ef82611098565b600c820191506111ff828461113f565b915061120a826111be565b60178201915081905092915050565b7f536f727279212000000000000000000000000000000000000000000000000000815250565b7f20596f752063616e206f6e6c79207769746864726177207768656e2062616c6160008201527f6e636520697320757020746f2000000000000000000000000000000000000000602082015250565b600061129b602d8361111f565b91506112a68261123f565b602d82019050919050565b60006112bc82610eb5565b6112c6818561111f565b93506112d6818560208601610ec0565b80840191505092915050565b7f20576569206f72206d6f72650000000000000000000000000000000000000000815250565b600061131382611219565b600782019150611323828561113f565b915061132e8261128e565b915061133a82846112b1565b9150611345826112e2565b600c820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f536f7272792120796f752063616e206f6e6c79207472616e7366657220000000815250565b7f20576569206f72206d6f726520746f2000000000000000000000000000000000815250565b60006113db82611384565b601d820191506113eb82856112b1565b91506113f6826113aa565b601082019150611406828461113f565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061144c82610da5565b915061145783610da5565b92508261146757611466611412565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114ac82610da5565b91506114b783610da5565b9250826114c7576114c6611412565b5b828204905092915050565b60006114dd82610da5565b91506114e883610da5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561151d5761151c611472565b5b828201905092915050565b600061153382610da5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561156657611565611472565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006115ab82610da5565b91506115b683610da5565b9250828210156115c9576115c8611472565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212203d706a03926ed54c3edb7320cd5a83b15022929559aac0ed82438718e48bb79d64736f6c634300080c0033";

type ValueBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ValueBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ValueBridge__factory extends ContractFactory {
  constructor(...args: ValueBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ownerName: string,
    _minTransferAmt: BigNumberish,
    _minWithdrawAmt: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ValueBridge> {
    return super.deploy(
      _ownerName,
      _minTransferAmt,
      _minWithdrawAmt,
      overrides || {}
    ) as Promise<ValueBridge>;
  }
  override getDeployTransaction(
    _ownerName: string,
    _minTransferAmt: BigNumberish,
    _minWithdrawAmt: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _ownerName,
      _minTransferAmt,
      _minWithdrawAmt,
      overrides || {}
    );
  }
  override attach(address: string): ValueBridge {
    return super.attach(address) as ValueBridge;
  }
  override connect(signer: Signer): ValueBridge__factory {
    return super.connect(signer) as ValueBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValueBridgeInterface {
    return new utils.Interface(_abi) as ValueBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ValueBridge {
    return new Contract(address, _abi, signerOrProvider) as ValueBridge;
  }
}
